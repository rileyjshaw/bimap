function Bimap(map1,map2){if(typeof map1!=="string"||typeof map2!=="string"){throw"Expected two map name strings as arguments"}this.bijection={};this.bijection[map1]=map2;this.bijection[map2]=map1;this[map1]={};this[map2]={};this[map1+"From"]=function(key){return this[map2][key]};this[map2+"From"]=function(key){return this[map1][key]}}Bimap.prototype.add=function add(obj){if(typeof obj!=="object"){throw"Expected an object as an argument"}var keys=Object.keys(obj);var map1=keys[0];var map2=keys[1];if(this.bijection[map1]!==map2){throw"Expected the argument's keys to correspond to the Bimap's two map names"}this[map1][obj[map1]]=obj[map2];this[map2][obj[map2]]=obj[map1]};Bimap.prototype.remove=function remove(map,value){var bijection=this.bijection[map];var correspondingValue=this[map][value];delete this[bijection][correspondingValue];delete this[map][value];return correspondingValue};module.exports=Bimap;